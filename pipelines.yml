pipelines:
  - name: u18nodetest
    steps:
      - name: test
        type: Bash
        configuration: 
          nodePool: u18-gcp-us-east1
          runtime:
            type: host
        execution:
          onExecute:
            #images should be in this order it self
            - images=(docker.bintray.io/jfrog/pipelines-u18go docker.bintray.io/jfrog/pipelines-u18node docker.bintray.io/jfrog/pipelines-u18java docker.bintray.io/jfrog/pipelines-u18cpp)
            - javatags=(8 11 13)
            - gotags=(1.13.7 1.12.14 1.11.13)
            - nodetags=(10.18.0 12.14.0 10.18.0)
            - cpptags=(8.0.0 9.0.0)
            - for docker_images in "${images[@]}"; do case "$docker_images" in "${images[0]}") for tags in "${gotags[@]}"; do  docker images | grep $docker_images | grep $tags ; done ;; "${images[1]}") for tags in "${nodetags[@]}"; do  docker images | grep $docker_images | grep $tags ; done ;;  "${images[2]}") for tags in "${javatags[@]}"; do  docker images | grep $docker_images | grep $tags ; done ;; "${images[3]}") for tags in "${cpptags[@]}"; do  docker images | grep $docker_images | grep $tags ; done ;;  esac; done


# resources:
#   - name: MyGitRepo
#     type: GitRepo
#     configuration:
#       path: Ranjansingh41/test
#       gitProvider: github
#       branches: 
#         include: master
#       files:  
#         include: Affinitygroup.yml
# pipelines:
#   - name: sample_AffinitygroupConnections
#     steps:
#       - name: my_StepConnections
#         type: Bash
#         configuration:
#           inputResources:
#             - name: MyGitRepo
#         execution:
#           onExecute:
#             - echo "hi"
#       - name: stepnum_one
#         type: Bash
#         configuration: 
#           inputSteps:
#             - name: my_StepConnections
#           affinityGroup: new_client
#           inputResources:
#             - name: MyGitRepo
#         execution:
#           onExecute:
#             - echo "hi" 
# #       - name: stepnum_two
# #         type: Bash
# #         configuration: 
# #           inputSteps:
# #             - name: stepnum_one
# #           affinityGroup: new_client
# #           inputResources:
# #             - name: MyGitRepo
# #         execution:
# #           onExecute:
# #             - echo "hi"   
#       - name: stepnum_three
#         type: Bash
#         configuration: 
#           inputSteps:
#             - name: stepnum_one #stepnum_two 
#           affinityGroup: new_client
#           inputResources:
#             - name: MyGitRepo
#         execution:
#           onExecute:
#             - echo "hi"  
#       - name: stepnum_four
#         type: Bash
#         configuration: 
#           inputSteps:
#             - name: stepnum_three
#           affinityGroup: new_client
#           inputResources:
#             - name: MyGitRepo
#         execution:
#           onExecute:
#             - echo "hi"      
#       - name: auto_one
#         type: Bash
#         configuration: 
#           inputSteps:
#             - name: my_StepConnections
#           affinityGroup: my_group
#           inputResources:
#             - name: MyGitRepo
#         execution:
#           onExecute:
#             - echo "hi"    
#       - name: auto_two
#         type: Bash
#         configuration: 
#           inputSteps:
#             - name: auto_one
#           affinityGroup: my_group
#           inputResources:
#             - name: MyGitRepo
#         execution:
#           onExecute:
#             - echo "hi"  
#       - name: auto_three
#         type: Bash
#         configuration: 
#           inputSteps:
#             - name: auto_two
#           affinityGroup: my_group
#           inputResources:
#             - name: MyGitRepo
#         execution:
#           onExecute:
#             - echo "hi"  



# pipelines:
#   - name: pipelines_S_Bash
#     steps:
#       - name: S_Bash5
#         type: PowerShell
#         configuration:
#           nodePool: ranjan_window
# #            inputSteps:
# #             - name: S_Bash4
#         execution:
#           onExecute:
#             - write-output "executing step..."
# #       - name: S_Bash6
#         type: PowerShell
#         configuration:
#           nodePool: ranjan_window
# #           inputSteps:
# #             - name: S_Bash5
#         execution:
#           onExecute:
#             - write-output "executing step..."
#       - name: S_Bash7
#         type: PowerShell
#         configuration:
#           nodePool: ranjan_window
# #           inputSteps:
# #             - name: S_Bash6
#         execution:
#           onExecute:
#             - write-output "executing step..."

  
# resources:  
#   - name: image
#     type: Image
#     configuration:
#        registry: gcp
#        imageName: gcr.io/ship-rc/ubuntu
#        imageTag: latest
#        autoPull: true  


#   - name: git2
#     type: GitRepo
#     configuration:
#       path: Ranjansingh41/test
#       gitProvider: github

# #   - name: S_Bash_0007_propertyBag
# #     type: PropertyBag
# #     configuration:
# #       property1: "test"

# pipelines:
#   - name: pipelinestestbash
#     steps:
#       - name: test41
#         type: Bash
#         configuration:
# #           nodePool: ranjan_azure
#           inputResources:
#             - name: git2
#         execution:
#           onExecute:
#             - echo "executing step..."
#             - echo "executing step2..."
#             - echo "executing step3..."
            
#       - name: test12
#         type: Bash
#         configuration:
#           nodePool: ranjan_azure
# #           inputSteps:
# #             - name: test_aws
#           inputResources:
#             - name: git2
#         execution:
#           onExecute:
#             - echo "executing step..."
            
#       - name: test898
#         type: Bash
#         configuration:
#           nodePool: ranjan_azure
# #           inputSteps:
# #             - name: test_aws
#           inputResources:
#             - name: git2
#         execution:
#           onExecute:
#             - echo "executing step..."



