resources:
  - name: artifactory_goo
    type: GitRepo
    configuration:
      path: ranjansingh41/artifactory-go-example
      branches:
        include: master
      gitProvider: ranjan_github
  
  - name: artifactory_goooo
    type: GitRepo
    configuration:
      path: ranjansingh41/project-examples
      branches:
        include: master
      gitProvider: ranjan_github
      
  - name: go_build_infoo
    type: BuildInfo
    configuration:
      sourceArtifactory: varsha_art
      buildName: go_example_build_publish_varsha
      buildNumber: 10
      
#   - name: unsigned_release_bundle_goo
#     type: ReleaseBundle
#     configuration:
#       sourceDistribution: dist 
#       name: test-go-local
#       version: v1.16
      
#   - name: signed_release_bundle_goo
#     type: ReleaseBundle
#     configuration:
#       sourceDistribution: dist 
#       name: test-go-local
#       version: v1.16
      
  - name: promoted_go_buildo
    type: BuildInfo
    configuration:
      sourceArtifactory: varsha_art
      buildName: go_example_module_publish_varsha
      buildNumber: 500
      
   - name: promoted_goooo
     type: BuildInfo
     configuration:
       sourceArtifactory: varsha_art
       buildName: promote_go_build_info_publish
       buildNumber: 40   
      
#   - name: distribution_rule_goo
#     type: DistributionRule
#     configuration:
#       sourceDistribution: dist
#       cityName: "*"
#       serviceName: "*"
#       siteName: "*"
#       countryCodes:
#         - CN      


pipelines:
  - name: go_builds
#     configuration:   
#       runtime:       
#         type: image
#         image:
#           custom:
#             name: vijaydocker1991/u18node
#             tag: gotesting
#             options: " "   
    steps:
      - name: build_goo
        type: GoBuild
        configuration:
#           nodePool: ubuntu16
          sourceLocation: golang-example/hello
          repository: test-go-local
          outputLocation: /tmp/dist
          outputFile: helloranjan 
          inputResources:
            - name: artifactory_go
          integrations:
            - name: varsha_art
        execution:
          onStart:
#             - wget https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz
#             - sudo tar -C /usr/local -xzf go1.12.5.linux-amd64.tar.gz
#             - export PATH=$PATH:/usr/local/go/bin
            - go version 
#             - jfrog --version
            
            
      - name: publish_go_binary
        type: GoPublishBinary
        configuration:
#           nodePool: ubuntu16        
          inputSteps:
            - name: build_goo
          targetRepository: test-go-local
          integrations:
            - name: art    

      - name: publish_build
        type: PublishBuildInfo
        configuration:
          nodePool: ubuntu16        
          inputSteps:
            - name: publish_go_binary
          outputResources:
            - name: go_build_infoo
            
      - name: promote_build_goo
        type: PromoteBuild
        configuration:
          nodePool: ubuntu16        
          targetRepository: test-go-local
          integrations:
            - name: art
          inputResources:
            - name: go_build_infoo
          outputResources:
            - name: promoted_go_buildo
            
#       - name: bundle_go_publisho
#         type: CreateReleaseBundle
#         configuration:
#           nodePool: ubuntu16        
#           dryRun: false
#           description: "This is to test GoBuild -> PushArtifactoryPackage -> PublishBuildInfo -> Promote -> CreateRelease -> Sign -> Distribute pipeline chain"
#           releaseBundleName: test-go-local
#           releaseBundleVersion: v4.1.$run_number
#           sign: false
#           inputResources:
#             - name: promoted_go_buildo
#           outputResources:
#             - name: unsigned_release_bundle_goo
            
#       - name: sign_release_bundle_goo
#         type: SignReleaseBundle
#         configuration:
#           inputResources:
#             - name: unsigned_release_bundle_goo
#           outputResources:
#             - name: signed_release_bundle_goo
            
#       - name: distribute_signed_release_bundleo
#         type: DistributeReleaseBundle
#         configuration:
#           dryRun: false
#           inputResources:
#             - name: signed_release_bundle_goo
#             - name: distribution_rule_goo
#           integrations: 
#             - name: dist
